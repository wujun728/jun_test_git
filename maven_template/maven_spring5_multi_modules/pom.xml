<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jun</groupId>
    <artifactId>maven_spring5_parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    
    <!-- 子模块定义 -->
    <modules>
        <module>maven_spring5_domain</module>
        <module>maven_spring5_dao</module>
        <module>maven_spring5_service</module>
        <module>maven_spring5_web</module>
        <module>maven_spring5_commons</module>
    </modules>

    <name>maven_spring5_parent</name>
    <url>http://www.java.com</url>

    <properties>
        <!-- 定义依赖的版本全局属性 -->
        <druid.version>1.0.1</druid.version>
        <mysql.version>8.0.15</mysql.version>
        <spring.version>5.2.0.RELEASE</spring.version>
        <mybatis.version>3.5.6</mybatis.version>
        <mybatis-spring.version>1.3.2</mybatis-spring.version>
        <pagehelper.version>5.1.10</pagehelper.version>

        <dubbo.version>2.6.5</dubbo.version>
        <zookeeper.version>3.5.5</zookeeper.version>
        <zkclient.version>0.10</zkclient.version>

        <commons-lang3.version>3.9</commons-lang3.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <commons-collections4.version>4.1</commons-collections4.version>
        <junit.version>4.12</junit.version>

        <mockito-core.version>3.0.0</mockito-core.version>
        <httpclient.version>4.5.6</httpclient.version>
        <fastjson.version>1.2.62</fastjson.version>
        <jedis.version>3.1.0</jedis.version>

        <log4j.version>1.2.17</log4j.version>
        <javax.servlet.version>4.0.1</javax.servlet.version>
        <rabbitmq-client.version>5.7.3</rabbitmq-client.version>

        <!-- 定义编码和JDK版本 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <!-- 定义依赖管理: 可以用来解决在同一个项目的依赖版本冲突问题 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>${rabbitmq-client.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 定义父模块的依赖，这里的依赖会被子模块继承 -->
    <dependencies>
        <!-- 父模块中的依赖，会被子模块自动继承，所有子模块共性的依赖，可以在父模块中定义 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons-beanutils.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>

    </dependencies>


    <build>
        <!-- 插件管理，对于maven官方插件来说，groupId是可以省略的 -->
        <pluginManagement>
            <plugins>
				<!-- clean 阶段对应的goal -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
				<!-- process-resources 阶段对应的goal -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
				<!-- compile 阶段对应的goal -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                </plugin>
				<!-- test 阶段对应的goal -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.20.1</version>
                </plugin>
				<!-- package 阶段对应的goal -->
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
				<!-- install 阶段对应的goal -->
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- 定义插件配置 -->
        <plugins>
            <!-- 测试周期插件 -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- 跳过测试 -->
                    <skip>true</skip>
                    <!-- 测试失败后，不影响构建 -->
                    <!--                    <testFailureIgnore>true</testFailureIgnore>-->
                </configuration>
                <version>2.20.1</version>
            </plugin>
        </plugins>

        <!-- 定义资源配置 -->
        <resources>
            <resource>
                <!-- 设定主资源目录  -->
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.java</include>
                </includes>

                <excludes>
                    <exclude>**/*.yaml</exclude>
                </excludes>

                <!-- maven default生命周期，process-resources阶段执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件时，是否对主资源目录开启资源过滤 -->
                <filtering>true</filtering>
            </resource>
        </resources>

    </build>
</project>



